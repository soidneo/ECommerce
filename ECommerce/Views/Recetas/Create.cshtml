@model ECommerce.Models.NuevaRecetaVista

@{
    ViewBag.Title = "Nueva Receta";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Comentarios, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Agregar producto", "AddProducto", "Recetas", new { }, new { @class = "dialog-window btn btn-info" })
                        @Html.ActionLink("Volver", "Index", new { }, new { @class = "btn btn-primary" })
                    </div>
                </div>


            </div>
        </div>
    </div>
}
<h4>Detalles</h4>
<hr />
@if (Model.Detalles.Count == 0)
{
    <h5>No hay productos agregados aun</h5>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Detalles[0].Producto.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Detalles[0].Producto.Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Detalles[0].Cantidad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Detalles[0].Producto.Unidad.Descripcion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Detalles[0].Producto.Precio)
            </th>
            <th>
                Total
            </th>

            <th></th>
        </tr>
        @foreach (var item in Model.Detalles)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.Producto.Image))
                    {
                        <img src="@Url.Content(item.Producto.Image)" alt="Logo" style="width:100px;height:auto;max-width:100%;" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.Descripcion)
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Cantidad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.Unidad.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producto.Precio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Valor)
                </td>
                <td>
                    @Html.ActionLink("X", "DelProducto", new { id = item.ProductoID },
                   new { @class = "btn btn-danger", onclick = "return confirm('Se eliminara el producto de la lista')" })
                </td>
            </tr>
        }
        <tr>
            <td colspan="3" align="right">
                <strong>Total</strong>
            </td>
            <td align="right">
                <strong>@Html.DisplayFor(modelItem => Model.TotalValor)</strong>
            </td>
        </tr>

    </table>
}
<div class="modal fade" id="AddProducto" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h2 class="modal-title"></h2>
            </div>
            <div class="modal-body"><div class="te">Por favor espere...</div></div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $('#datetimepicker').datetimepicker({ format: 'YYYY/MM/DD' });
        });

        $(document).ready(function () {
            $('body').on("click", "a.dialog-window", null, function (e) {
                e.preventDefault();
                var $link = $(this);
                var title = $link.text();
                $('#AddProducto .modal-title').html(title);
                var url = $(this).attr('href');
                if (url.indexOf('#') == 0) {
                    $('#AddProducto').modal('show');
                }
                else {
                    $.get(url, function (data) {
                        $('#AddProducto .te').html(data);
                        $('#AddProducto').modal();
                    }).success(function () { $('input:text:visible:first').focus(); });
                }
            });
        });


    </script>
}