@model PagedList.IPagedList<ECommerce.Models.Unidad>

@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Descripcion)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td colspan="2">
            @Html.DisplayFor(modelItem => item.Descripcion)
        </td>
        <td>
            <a href='@Url.Action("Edit", "Unidades", new {id = item.UnidadID})' .replace("ID",id) class="btn btn-warning">
                <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
            </a>
            <a href='@Url.Action("Details", "Unidades", new {id = item.UnidadID})' .replace("ID",id) class="btn btn-info">
                <span class="glyphicon glyphicon-th-list" aria-hidden="true"></span>
            </a>
            <a href='@Url.Action("Delete", "Unidades", new {id = item.UnidadID})' .replace("ID",id) class="btn btn-danger">
                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            </a>
        </td>
    </tr>
}

</table>
Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)  de: @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
    ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter
}))