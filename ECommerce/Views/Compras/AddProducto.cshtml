@model ECommerce.Models.AddProductoVista
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductoID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductoId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true", @oninvalid = "setCustomValidity('Seleccione un producto')", @oninput = "setCustomValidity('')" })
                @Html.ValidationMessageFor(model => model.ProductoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", @Value = 1, @required = "true", @oninvalid = "setCustomValidity('Cantidad Requerida')", @oninput = "setCustomValidity('')" } })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="submit" value="Agregar Producto" class="btn btn-success" />
        @Html.ActionLink("Volver", "Create", new { }, new { @class = "btn btn-primary" })
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}


